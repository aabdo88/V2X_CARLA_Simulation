
Test vectors for Butterfly Expansion Function
=============================================

"le": little-endian
"be": big-endian
Curve: NISTp256
---------------
i (16 bits):
0x217D

j (in range [0,19], padded to 16 bits) =
0x0010

Expanding Certificate key pair (a,A)
------------------------------------
ck: AES key (128 bits, randomly generated):
0x121D14216715E11D2D3787434A673B1B
[be] ck[16] = 
{ 0x12, 0x1D, 0x14, 0x21, 0x67, 0x15, 0xE1, 0x1D, 0x2D, 0x37, 0x87, 0x43, 0x4A, 0x67, 0x3B, 0x1B }

a: Signing seed private key (256 bits):
0xD418760F0CB2DCB856BC3C7217AD3AA36DB6742AE1DB655A3D28DF88CBBF84E1
[le] a[8] = 
{ 0xCBBF84E1, 0x3D28DF88, 0xE1DB655A, 0x6DB6742A, 0x17AD3AA3, 0x56BC3C72, 0x0CB2DCB8, 0xD418760F }

A: Signing seed public key (2*256 bits):
[0xee9cc7fbd9edecea41f7c8bd258e8d2e988e75bd069addca1e5a38e534ac6818L], [0x5ae3c8d9fe0b1fc7438f29417c240f8bf81c358ec1a4d0c6e98d8edbcc714017L]
[le] A = {
{ 0x34AC6818, 0x1E5A38E5, 0x069ADDCA, 0x988E75BD, 0x258E8D2E, 0x41F7C8BD, 0xD9EDECEA, 0xEE9CC7FB }
{ 0xCC714017, 0xE98D8EDB, 0xC1A4D0C6, 0xF81C358E, 0x7C240F8B, 0x438F2941, 0xFE0B1FC7, 0x5AE3C8D9 }
}

x_cert: Expansion function input for Certificate keys (128 bits):
0x000000000000217D0000001000000000

x+1: Input to AES block 1 encryption (128 bits):
0x000000000000217D0000001000000001
[be] xp1[16] = 
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x7D, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01 }

AES_k(x+1): Output of AES block 1 encryption (128 bits):
0x74A5D8F5A3AA1F1DA456EBCBC827A639
[be] aes_xp1[16] = 
{ 0x74, 0xA5, 0xD8, 0xF5, 0xA3, 0xAA, 0x1F, 0x1D, 0xA4, 0x56, 0xEB, 0xCB, 0xC8, 0x27, 0xA6, 0x39 }

AES_k(x+1) XOR (x+1): block 1 (128 bits):
0x74A5D8F5A3AA3E60A456EBDBC827A638
[be] block_1[16] = 
{ 0x74, 0xA5, 0xD8, 0xF5, 0xA3, 0xAA, 0x3E, 0x60, 0xA4, 0x56, 0xEB, 0xDB, 0xC8, 0x27, 0xA6, 0x38 }

x+2: Input to AES block 2 encryption (128 bits):
0x000000000000217D0000001000000002
[be] xp2[16] = 
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x7D, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02 }

AES_k(x+2): Output of AES block 2 encryption (128 bits):
0x4ED1940D734C5A8F8DB8EE7F12C55A71
[be] aes_xp2[16] = 
{ 0x4E, 0xD1, 0x94, 0x0D, 0x73, 0x4C, 0x5A, 0x8F, 0x8D, 0xB8, 0xEE, 0x7F, 0x12, 0xC5, 0x5A, 0x71 }

AES_k(x+2) XOR (x+2): block 2 (128 bits):
0x4ED1940D734C7BF28DB8EE6F12C55A73
[be] block_2[16] = 
{ 0x4E, 0xD1, 0x94, 0x0D, 0x73, 0x4C, 0x7B, 0xF2, 0x8D, 0xB8, 0xEE, 0x6F, 0x12, 0xC5, 0x5A, 0x73 }

x+3: Input to AES block 3 encryption (128 bits):
0x000000000000217D0000001000000003
[be] xp3[16] = 
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x7D, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x03 }

AES_k(x+3): Output of AES block 3 encryption (128 bits):
0x60C11E5EA70458EEBC9BD893C8279747
[be] aes_xp3[16] = 
{ 0x60, 0xC1, 0x1E, 0x5E, 0xA7, 0x04, 0x58, 0xEE, 0xBC, 0x9B, 0xD8, 0x93, 0xC8, 0x27, 0x97, 0x47 }

AES_k(x+3) XOR (x+3): block 3 (128 bits):
0x60C11E5EA7047993BC9BD883C8279744
[be] block_3[16] = 
{ 0x60, 0xC1, 0x1E, 0x5E, 0xA7, 0x04, 0x79, 0x93, 0xBC, 0x9B, 0xD8, 0x83, 0xC8, 0x27, 0x97, 0x44 }

f_k^{int}(x) = block1 || block2 || block3 (384 bits):
0x74A5D8F5A3AA3E60A456EBDBC827A6384ED1940D734C7BF28DB8EE6F12C55A7360C11E5EA7047993BC9BD883C8279744
[be] f_k_int_x_cert[48] = 
{ 0x74, 0xA5, 0xD8, 0xF5, 0xA3, 0xAA, 0x3E, 0x60, 0xA4, 0x56, 0xEB, 0xDB, 0xC8, 0x27, 0xA6, 0x38, 
  0x4E, 0xD1, 0x94, 0x0D, 0x73, 0x4C, 0x7B, 0xF2, 0x8D, 0xB8, 0xEE, 0x6F, 0x12, 0xC5, 0x5A, 0x73, 
  0x60, 0xC1, 0x1E, 0x5E, 0xA7, 0x04, 0x79, 0x93, 0xBC, 0x9B, 0xD8, 0x83, 0xC8, 0x27, 0x97, 0x44 }

f_k(x) = f_k^{int}(x) mod l, where l is the order of the group of points on the curve (256 bits):
0x1D3BF156D6B84B5BE3F83F7AD0790057B815EC84BD8E830856FCACF2EB39AEC6
[le] f_k_x_cert[8] = 
{ 0xEB39AEC6, 0x56FCACF2, 0xBD8E8308, 0xB815EC84, 0xD0790057, 0xE3F83F7A, 0xD6B84B5B, 0x1D3BF156 }

a + f_k(x_cert) mod l: Expanded private key (256 bits)
0xF1546765E36B28143AB47BECE8263AFB25CC60AF9F69E86294258C7BB6F933A7
[le] a_exp[8] = 
{ 0xB6F933A7, 0x94258C7B, 0x9F69E862, 0x25CC60AF, 0xE8263AFB, 0x3AB47BEC, 0xE36B2814, 0xF1546765 }

A + f_k(x_cert)*G_P256 mod l: Expanded public key (256 bits)
[0x68c8ae46ae60849a46b87225bb6ec835e435b994f981ce760ad6a28e3c3abd4L], [0x38eff1ef2af00132e50dac1cfd956856234163009b2dad8a6b3d6bd76025dcc4L]
[le] A_exp = {
{ 0xE3C3ABD4, 0x60AD6A28, 0x4F981CE7, 0x5E435B99, 0x5BB6EC83, 0xA46B8722, 0x6AE60849, 0x068C8AE4 }
{ 0x6025DCC4, 0x6B3D6BD7, 0x9B2DAD8A, 0x23416300, 0xFD956856, 0xE50DAC1C, 0x2AF00132, 0x38EFF1EF }
}

SUCCESS: Verified that expanded certificate private and public keys form a key pair

Expanding Encryption key pair (h,H)
-----------------------------------
ek: AES key (128 bits, randomly generated):
0xF9FCE2371B4523C0A75FC352BA7EBD8D
[be] ek[16] = 
{ 0xF9, 0xFC, 0xE2, 0x37, 0x1B, 0x45, 0x23, 0xC0, 0xA7, 0x5F, 0xC3, 0x52, 0xBA, 0x7E, 0xBD, 0x8D }

h: Signing seed private key (256 bits):
0x4624A6F9F6BC6BD088A71ED97B3AEE983B5CC2F574F64E96A531D2464137049F
[le] h[8] = 
{ 0x4137049F, 0xA531D246, 0x74F64E96, 0x3B5CC2F5, 0x7B3AEE98, 0x88A71ED9, 0xF6BC6BD0, 0x4624A6F9 }

H: Signing seed public key (2*256 bits):
[0x121aa495c6b2c07a2b2daec36bd207d6620d7e6081050df5de3e9696868fcdcaL], [0x46c31a1abea0bddaaaaefbba3afdbff1ac8d196bc313fc130926810c05503950L]
[le] H = {
{ 0x868FCDCA, 0xDE3E9696, 0x81050DF5, 0x620D7E60, 0x6BD207D6, 0x2B2DAEC3, 0xC6B2C07A, 0x121AA495 }
{ 0x05503950, 0x0926810C, 0xC313FC13, 0xAC8D196B, 0x3AFDBFF1, 0xAAAEFBBA, 0xBEA0BDDA, 0x46C31A1A }
}

x_enc: Expansion function input for Encryption keys (128 bits):
0xFFFFFFFF0000217D0000001000000000

x+1: Input to AES block 1 encryption (128 bits):
0xFFFFFFFF0000217D0000001000000001
[be] xp1[16] = 
{ 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x21, 0x7D, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01 }

AES_k(x+1): Output of AES block 1 encryption (128 bits):
0x36C8EBED2ACE86DB1A39F759F20348A5
[be] aes_xp1[16] = 
{ 0x36, 0xC8, 0xEB, 0xED, 0x2A, 0xCE, 0x86, 0xDB, 0x1A, 0x39, 0xF7, 0x59, 0xF2, 0x03, 0x48, 0xA5 }

AES_k(x+1) XOR (x+1): block 1 (128 bits):
0xC93714122ACEA7A61A39F749F20348A4
[be] block_1[16] = 
{ 0xC9, 0x37, 0x14, 0x12, 0x2A, 0xCE, 0xA7, 0xA6, 0x1A, 0x39, 0xF7, 0x49, 0xF2, 0x03, 0x48, 0xA4 }

x+2: Input to AES block 2 encryption (128 bits):
0xFFFFFFFF0000217D0000001000000002
[be] xp2[16] = 
{ 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x21, 0x7D, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02 }

AES_k(x+2): Output of AES block 2 encryption (128 bits):
0x8E8088662508ABB7AB8015E839F5D5F4
[be] aes_xp2[16] = 
{ 0x8E, 0x80, 0x88, 0x66, 0x25, 0x08, 0xAB, 0xB7, 0xAB, 0x80, 0x15, 0xE8, 0x39, 0xF5, 0xD5, 0xF4 }

AES_k(x+2) XOR (x+2): block 2 (128 bits):
0x717F779925088ACAAB8015F839F5D5F6
[be] block_2[16] = 
{ 0x71, 0x7F, 0x77, 0x99, 0x25, 0x08, 0x8A, 0xCA, 0xAB, 0x80, 0x15, 0xF8, 0x39, 0xF5, 0xD5, 0xF6 }

x+3: Input to AES block 3 encryption (128 bits):
0xFFFFFFFF0000217D0000001000000003
[be] xp3[16] = 
{ 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x21, 0x7D, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x03 }

AES_k(x+3): Output of AES block 3 encryption (128 bits):
0xD7AD00AA5D83C39FB1E2450881402ADA
[be] aes_xp3[16] = 
{ 0xD7, 0xAD, 0x00, 0xAA, 0x5D, 0x83, 0xC3, 0x9F, 0xB1, 0xE2, 0x45, 0x08, 0x81, 0x40, 0x2A, 0xDA }

AES_k(x+3) XOR (x+3): block 3 (128 bits):
0x2852FF555D83E2E2B1E2451881402AD9
[be] block_3[16] = 
{ 0x28, 0x52, 0xFF, 0x55, 0x5D, 0x83, 0xE2, 0xE2, 0xB1, 0xE2, 0x45, 0x18, 0x81, 0x40, 0x2A, 0xD9 }

f_k^{int}(x) = block1 || block2 || block3 (384 bits):
0xC93714122ACEA7A61A39F749F20348A4717F779925088ACAAB8015F839F5D5F62852FF555D83E2E2B1E2451881402AD9
[be] f_k_int_x_enc[48] = 
{ 0xC9, 0x37, 0x14, 0x12, 0x2A, 0xCE, 0xA7, 0xA6, 0x1A, 0x39, 0xF7, 0x49, 0xF2, 0x03, 0x48, 0xA4, 
  0x71, 0x7F, 0x77, 0x99, 0x25, 0x08, 0x8A, 0xCA, 0xAB, 0x80, 0x15, 0xF8, 0x39, 0xF5, 0xD5, 0xF6, 
  0x28, 0x52, 0xFF, 0x55, 0x5D, 0x83, 0xE2, 0xE2, 0xB1, 0xE2, 0x45, 0x18, 0x81, 0x40, 0x2A, 0xD9 }

f_k(x) = f_k^{int}(x) mod l, where l is the order of the group of points on the curve (256 bits):
0xA43A19559AA415E5CBD784EB4414C03744C8FEF615F65E9B63235E2FDE44A38E
[le] f_k_x_enc[8] = 
{ 0xDE44A38E, 0x63235E2F, 0x15F65E9B, 0x44C8FEF6, 0x4414C037, 0xCBD784EB, 0x9AA415E5, 0xA43A1955 }

h + f_k(x_enc) mod l: Expanded private key (256 bits)
0xEA5EC04F916081B6547EA3C4BF4FAECF8025C1EB8AECAD32085530761F7BA82D
[le] h_exp[8] = 
{ 0x1F7BA82D, 0x08553076, 0x8AECAD32, 0x8025C1EB, 0xBF4FAECF, 0x547EA3C4, 0x916081B6, 0xEA5EC04F }

H + f_k(x_enc)*G_P256 mod l: Expanded public key (256 bits)
[0x8ddcadd51b77733ca1c1e40fb206eb13baff7463afc5cec25faf043311af0e30L], [0x679c74794e92bcd7fdb2b7cf97e59360a431314d28884737ea4e31d27f2aef61L]
[le] H_exp = {
{ 0x11AF0E30, 0x5FAF0433, 0xAFC5CEC2, 0xBAFF7463, 0xB206EB13, 0xA1C1E40F, 0x1B77733C, 0x8DDCADD5 }
{ 0x7F2AEF61, 0xEA4E31D2, 0x28884737, 0xA431314D, 0x97E59360, 0xFDB2B7CF, 0x4E92BCD7, 0x679C7479 }
}

SUCCESS: Verified that expanded encryption private and public keys form a key pair

