
Test vectors for Implicit Certificate Generation and Public/Private Keys Reconstruction
=======================================================================================
As per SEC4

Certificate Generation Inputs:
    - tbsCert: {octet string} To-be-signed user's certificate data
    - RU:      {ec256 point}  User's certificate request public key
    - dCA:     {octet string} CA's private key
    [- k:      {octet string} CA's ephemeral key, should be randomly generated by the CA
                              but can be input to this function for test purposes]

Certificate Generation Outputs:
    - PU:      {ec256 point} User's public key reconstruction point
    - CertU:   {octet string} tbsCert || PU
               In this script, to illustrate the concept, PU is concatenated with tbsCert;
               i.e., H(CertU) = H(tbsCert || PU) is just for illustration purposes
               Important Note:
               - In 1609.2 v3 d9 Sec.6.4.3,
                 H(CertU) = H (H (ToBeSignedCertificate) || H (Entirety of issuer cert) )
    - r:       {octet string} private key reconstruction value
    [- k:      {octet string} CA's ephemeral key, should be kept secret
                              but is output from this function for test purposes]
------------

Private Key Reconstruction Inputs:
    - kU:    {octet string} User's certificate request private key, corresponding to RU
    - CertU: {octet string} tbsCert || PU (see note above)
    - r:     {octet string} private key reconstruction value

Private Key Reconstruction Output:
    - dU:    {octet string} User's (reconstructed) private key
------------

Public Key Reconstruction Inputs:
    - CertU: {octet string} tbsCert || PU (see note above)
    - QCA:   {ec256 point}  CA's public key

Public Key Reconstruction Outputs:
    - QU:    {ec256_point} User's (reconstructed) public key

Test Vector #1:
===============
tbsCert is the bytes of the string "This is a test!":
tbsCert = 0x54686973206973206120746573742100
 tbsCert[16] = 
{ 0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x61, 0x20, 0x74, 0x65, 0x73, 0x74, 0x21, 0x00 }

User's certificate request private key:
kU = 0x1384C31D6982D52BCA3BED8A7E60F52FECDAB44E5C0EA166815A8159E09FFB42
 kU[32] = 
{ 0x13, 0x84, 0xC3, 0x1D, 0x69, 0x82, 0xD5, 0x2B, 0xCA, 0x3B, 0xED, 0x8A, 0x7E, 0x60, 0xF5, 0x2F, 
  0xEC, 0xDA, 0xB4, 0x4E, 0x5C, 0x0E, 0xA1, 0x66, 0x81, 0x5A, 0x81, 0x59, 0xE0, 0x9F, 0xFB, 0x42 }

User's certificate request public key (x-coordinate):
RUx = 0xF45A99137B1BB2C150D6D8CF7292CA07DA68C003DAA766A9AF7F67F5EE916828
 RUx[32] = 
{ 0xF4, 0x5A, 0x99, 0x13, 0x7B, 0x1B, 0xB2, 0xC1, 0x50, 0xD6, 0xD8, 0xCF, 0x72, 0x92, 0xCA, 0x07, 
  0xDA, 0x68, 0xC0, 0x03, 0xDA, 0xA7, 0x66, 0xA9, 0xAF, 0x7F, 0x67, 0xF5, 0xEE, 0x91, 0x68, 0x28 }

User's certificate request public key (y-coordinate):
RUy = 0xF6A25216F44CB64A96C229AE00B479857B3B81C1319FB2ADF0E8DB2681769729
 RUy[32] = 
{ 0xF6, 0xA2, 0x52, 0x16, 0xF4, 0x4C, 0xB6, 0x4A, 0x96, 0xC2, 0x29, 0xAE, 0x00, 0xB4, 0x79, 0x85, 
  0x7B, 0x3B, 0x81, 0xC1, 0x31, 0x9F, 0xB2, 0xAD, 0xF0, 0xE8, 0xDB, 0x26, 0x81, 0x76, 0x97, 0x29 }

CA's private key:
dCA = 0x97D1368E8C07A54F66C9DCE284BA76CAF4178206614F809A4EB43CB3106AA60E
 dCA[32] = 
{ 0x97, 0xD1, 0x36, 0x8E, 0x8C, 0x07, 0xA5, 0x4F, 0x66, 0xC9, 0xDC, 0xE2, 0x84, 0xBA, 0x76, 0xCA, 
  0xF4, 0x17, 0x82, 0x06, 0x61, 0x4F, 0x80, 0x9A, 0x4E, 0xB4, 0x3C, 0xB3, 0x10, 0x6A, 0xA6, 0x0E }

CA's public key (x-coordinate):
QCAx = 0x3BB8FFD19B25EE1BB939CD4935FBFA8FBAADBA64843338A95595A70ED7479B70
 QCAx[32] = 
{ 0x3B, 0xB8, 0xFF, 0xD1, 0x9B, 0x25, 0xEE, 0x1B, 0xB9, 0x39, 0xCD, 0x49, 0x35, 0xFB, 0xFA, 0x8F, 
  0xBA, 0xAD, 0xBA, 0x64, 0x84, 0x33, 0x38, 0xA9, 0x55, 0x95, 0xA7, 0x0E, 0xD7, 0x47, 0x9B, 0x70 }

CA's public key (y-coordinate):
QCAy = 0xEB60DDC790E3CB05E85225F636D8A7C20DF3A8135C4B2AE5396367B4E86077F8
 QCAy[32] = 
{ 0xEB, 0x60, 0xDD, 0xC7, 0x90, 0xE3, 0xCB, 0x05, 0xE8, 0x52, 0x25, 0xF6, 0x36, 0xD8, 0xA7, 0xC2, 
  0x0D, 0xF3, 0xA8, 0x13, 0x5C, 0x4B, 0x2A, 0xE5, 0x39, 0x63, 0x67, 0xB4, 0xE8, 0x60, 0x77, 0xF8 }

CA's ephemeral private key (should be chosen at random by CA for every cert request):
k = 0xE2F9CBCEC3F28F7DFBEF044732C41119816C62909FB720B091FB8F380F1B70DC
 k[32] = 
{ 0xE2, 0xF9, 0xCB, 0xCE, 0xC3, 0xF2, 0x8F, 0x7D, 0xFB, 0xEF, 0x04, 0x47, 0x32, 0xC4, 0x11, 0x19, 
  0x81, 0x6C, 0x62, 0x90, 0x9F, 0xB7, 0x20, 0xB0, 0x91, 0xFB, 0x8F, 0x38, 0x0F, 0x1B, 0x70, 0xDC }

User's public key reconstruction point (x-coordinate):
PUx = 0x4A1890E30A584208DAD3838D0C5CECB1ED6B01D48893C684C59908F5B38E3D82
 PUx[32] = 
{ 0x4A, 0x18, 0x90, 0xE3, 0x0A, 0x58, 0x42, 0x08, 0xDA, 0xD3, 0x83, 0x8D, 0x0C, 0x5C, 0xEC, 0xB1, 
  0xED, 0x6B, 0x01, 0xD4, 0x88, 0x93, 0xC6, 0x84, 0xC5, 0x99, 0x08, 0xF5, 0xB3, 0x8E, 0x3D, 0x82 }

User's public key reconstruction point (y-coordinate):
PUy = 0xBAE8FB2EF2DC080F248F44FCEC458B1B35ECDC80F00C959292CBE21BE2FF2EA2
 PUy[32] = 
{ 0xBA, 0xE8, 0xFB, 0x2E, 0xF2, 0xDC, 0x08, 0x0F, 0x24, 0x8F, 0x44, 0xFC, 0xEC, 0x45, 0x8B, 0x1B, 
  0x35, 0xEC, 0xDC, 0x80, 0xF0, 0x0C, 0x95, 0x92, 0x92, 0xCB, 0xE2, 0x1B, 0xE2, 0xFF, 0x2E, 0xA2 }

User's CertU (encoded in this way for illustration purpose and testing only):
CertU = 0x54686973206973206120746573742100024a1890e30a584208dad3838d0c5cecb1ed6b01d48893c684c59908f5b38e3d82
 CertU[49] = 
{ 0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x61, 0x20, 0x74, 0x65, 0x73, 0x74, 0x21, 0x00, 
  0x02, 0x4A, 0x18, 0x90, 0xE3, 0x0A, 0x58, 0x42, 0x08, 0xDA, 0xD3, 0x83, 0x8D, 0x0C, 0x5C, 0xEC, 
  0xB1, 0xED, 0x6B, 0x01, 0xD4, 0x88, 0x93, 0xC6, 0x84, 0xC5, 0x99, 0x08, 0xF5, 0xB3, 0x8E, 0x3D, 
  0x82 }

User's private key reconstruction value:
r = 0x8A7966677B40674389118E269777451174564A3AD57FEC31F4EEFF07C641B4C8
 r[32] = 
{ 0x8A, 0x79, 0x66, 0x67, 0x7B, 0x40, 0x67, 0x43, 0x89, 0x11, 0x8E, 0x26, 0x97, 0x77, 0x45, 0x11, 
  0x74, 0x56, 0x4A, 0x3A, 0xD5, 0x7F, 0xEC, 0x31, 0xF4, 0xEE, 0xFF, 0x07, 0xC6, 0x41, 0xB4, 0xC8 }

User's reconstructed private key:
dU = 0xEF6095F346D8DA2B95B88102C7D50B39FBDC1BD75EB56D556020B1EE0B9FA5A7
 dU[32] = 
{ 0xEF, 0x60, 0x95, 0xF3, 0x46, 0xD8, 0xDA, 0x2B, 0x95, 0xB8, 0x81, 0x02, 0xC7, 0xD5, 0x0B, 0x39, 
  0xFB, 0xDC, 0x1B, 0xD7, 0x5E, 0xB5, 0x6D, 0x55, 0x60, 0x20, 0xB1, 0xEE, 0x0B, 0x9F, 0xA5, 0xA7 }

User's reconstructed public key (x-coordinate):
QUx = 0xE76F7751EEC099CCCF074927FB0C0E4BC9EF7434B70119B39A91D150A2CA69A9
 QUx[32] = 
{ 0xE7, 0x6F, 0x77, 0x51, 0xEE, 0xC0, 0x99, 0xCC, 0xCF, 0x07, 0x49, 0x27, 0xFB, 0x0C, 0x0E, 0x4B, 
  0xC9, 0xEF, 0x74, 0x34, 0xB7, 0x01, 0x19, 0xB3, 0x9A, 0x91, 0xD1, 0x50, 0xA2, 0xCA, 0x69, 0xA9 }

User's reconstructed public key (y-coordinate):
QUy = 0x174C7CCA46F5D73439F79987CB613B229ABE3F1F8D163E3D677211A690A8EC31
 QUy[32] = 
{ 0x17, 0x4C, 0x7C, 0xCA, 0x46, 0xF5, 0xD7, 0x34, 0x39, 0xF7, 0x99, 0x87, 0xCB, 0x61, 0x3B, 0x22, 
  0x9A, 0xBE, 0x3F, 0x1F, 0x8D, 0x16, 0x3E, 0x3D, 0x67, 0x72, 0x11, 0xA6, 0x90, 0xA8, 0xEC, 0x31 }

Test Vector #2:
===============
tbsCert is the bytes of the string "This is a test!":
tbsCert = 0x54686973206973206120746573742100
 tbsCert[16] = 
{ 0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x61, 0x20, 0x74, 0x65, 0x73, 0x74, 0x21, 0x00 }

User's certificate request private key:
kU = 0x1384C31D6982D52BCA3BED8A7E60F52FECDAB44E5C0EA166815A8159E09FFB42
 kU[32] = 
{ 0x13, 0x84, 0xC3, 0x1D, 0x69, 0x82, 0xD5, 0x2B, 0xCA, 0x3B, 0xED, 0x8A, 0x7E, 0x60, 0xF5, 0x2F, 
  0xEC, 0xDA, 0xB4, 0x4E, 0x5C, 0x0E, 0xA1, 0x66, 0x81, 0x5A, 0x81, 0x59, 0xE0, 0x9F, 0xFB, 0x42 }

User's certificate request public key (x-coordinate):
RUx = 0xF45A99137B1BB2C150D6D8CF7292CA07DA68C003DAA766A9AF7F67F5EE916828
 RUx[32] = 
{ 0xF4, 0x5A, 0x99, 0x13, 0x7B, 0x1B, 0xB2, 0xC1, 0x50, 0xD6, 0xD8, 0xCF, 0x72, 0x92, 0xCA, 0x07, 
  0xDA, 0x68, 0xC0, 0x03, 0xDA, 0xA7, 0x66, 0xA9, 0xAF, 0x7F, 0x67, 0xF5, 0xEE, 0x91, 0x68, 0x28 }

User's certificate request public key (y-coordinate):
RUy = 0xF6A25216F44CB64A96C229AE00B479857B3B81C1319FB2ADF0E8DB2681769729
 RUy[32] = 
{ 0xF6, 0xA2, 0x52, 0x16, 0xF4, 0x4C, 0xB6, 0x4A, 0x96, 0xC2, 0x29, 0xAE, 0x00, 0xB4, 0x79, 0x85, 
  0x7B, 0x3B, 0x81, 0xC1, 0x31, 0x9F, 0xB2, 0xAD, 0xF0, 0xE8, 0xDB, 0x26, 0x81, 0x76, 0x97, 0x29 }

CA's private key:
dCA = 0x97D1368E8C07A54F66C9DCE284BA76CAF4178206614F809A4EB43CB3106AA60E
 dCA[32] = 
{ 0x97, 0xD1, 0x36, 0x8E, 0x8C, 0x07, 0xA5, 0x4F, 0x66, 0xC9, 0xDC, 0xE2, 0x84, 0xBA, 0x76, 0xCA, 
  0xF4, 0x17, 0x82, 0x06, 0x61, 0x4F, 0x80, 0x9A, 0x4E, 0xB4, 0x3C, 0xB3, 0x10, 0x6A, 0xA6, 0x0E }

CA's public key (x-coordinate):
QCAx = 0x3BB8FFD19B25EE1BB939CD4935FBFA8FBAADBA64843338A95595A70ED7479B70
 QCAx[32] = 
{ 0x3B, 0xB8, 0xFF, 0xD1, 0x9B, 0x25, 0xEE, 0x1B, 0xB9, 0x39, 0xCD, 0x49, 0x35, 0xFB, 0xFA, 0x8F, 
  0xBA, 0xAD, 0xBA, 0x64, 0x84, 0x33, 0x38, 0xA9, 0x55, 0x95, 0xA7, 0x0E, 0xD7, 0x47, 0x9B, 0x70 }

CA's public key (y-coordinate):
QCAy = 0xEB60DDC790E3CB05E85225F636D8A7C20DF3A8135C4B2AE5396367B4E86077F8
 QCAy[32] = 
{ 0xEB, 0x60, 0xDD, 0xC7, 0x90, 0xE3, 0xCB, 0x05, 0xE8, 0x52, 0x25, 0xF6, 0x36, 0xD8, 0xA7, 0xC2, 
  0x0D, 0xF3, 0xA8, 0x13, 0x5C, 0x4B, 0x2A, 0xE5, 0x39, 0x63, 0x67, 0xB4, 0xE8, 0x60, 0x77, 0xF8 }

CA's ephemeral private key (should be chosen at random by CA for every cert request):
k = 0xD418760F0CB2DCB856BC3C7217AD3AA36DB6742AE1DB655A3D28DF88CBBF84E1
 k[32] = 
{ 0xD4, 0x18, 0x76, 0x0F, 0x0C, 0xB2, 0xDC, 0xB8, 0x56, 0xBC, 0x3C, 0x72, 0x17, 0xAD, 0x3A, 0xA3, 
  0x6D, 0xB6, 0x74, 0x2A, 0xE1, 0xDB, 0x65, 0x5A, 0x3D, 0x28, 0xDF, 0x88, 0xCB, 0xBF, 0x84, 0xE1 }

User's public key reconstruction point (x-coordinate):
PUx = 0x237B2D6610DA5B67E18AAEC0F09C99EE08D4F00852C7ED27C12963120F76A147
 PUx[32] = 
{ 0x23, 0x7B, 0x2D, 0x66, 0x10, 0xDA, 0x5B, 0x67, 0xE1, 0x8A, 0xAE, 0xC0, 0xF0, 0x9C, 0x99, 0xEE, 
  0x08, 0xD4, 0xF0, 0x08, 0x52, 0xC7, 0xED, 0x27, 0xC1, 0x29, 0x63, 0x12, 0x0F, 0x76, 0xA1, 0x47 }

User's public key reconstruction point (y-coordinate):
PUy = 0x873BFDCD4E390E705A9FC54B2467DE8A999325B349FFE53CC3674D4A9EFF122C
 PUy[32] = 
{ 0x87, 0x3B, 0xFD, 0xCD, 0x4E, 0x39, 0x0E, 0x70, 0x5A, 0x9F, 0xC5, 0x4B, 0x24, 0x67, 0xDE, 0x8A, 
  0x99, 0x93, 0x25, 0xB3, 0x49, 0xFF, 0xE5, 0x3C, 0xC3, 0x67, 0x4D, 0x4A, 0x9E, 0xFF, 0x12, 0x2C }

User's CertU (encoded in this way for illustration purpose and testing only):
CertU = 0x5468697320697320612074657374210002237b2d6610da5b67e18aaec0f09c99ee08d4f00852c7ed27c12963120f76a147
 CertU[49] = 
{ 0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x61, 0x20, 0x74, 0x65, 0x73, 0x74, 0x21, 0x00, 
  0x02, 0x23, 0x7B, 0x2D, 0x66, 0x10, 0xDA, 0x5B, 0x67, 0xE1, 0x8A, 0xAE, 0xC0, 0xF0, 0x9C, 0x99, 
  0xEE, 0x08, 0xD4, 0xF0, 0x08, 0x52, 0xC7, 0xED, 0x27, 0xC1, 0x29, 0x63, 0x12, 0x0F, 0x76, 0xA1, 
  0x47 }

User's private key reconstruction value:
r = 0x06A8D6FCDC18AC05F6D9D88AB2C31B462E72C58C60555A3D9DF83DB6F2E3142B
 r[32] = 
{ 0x06, 0xA8, 0xD6, 0xFC, 0xDC, 0x18, 0xAC, 0x05, 0xF6, 0xD9, 0xD8, 0x8A, 0xB2, 0xC3, 0x1B, 0x46, 
  0x2E, 0x72, 0xC5, 0x8C, 0x60, 0x55, 0x5A, 0x3D, 0x9D, 0xF8, 0x3D, 0xB6, 0xF2, 0xE3, 0x14, 0x2B }

User's reconstructed private key:
dU = 0x49FC4F116692225FEB26CC6366BB6D60CA6D6082DDFA980BD12FF7415AFD8439
 dU[32] = 
{ 0x49, 0xFC, 0x4F, 0x11, 0x66, 0x92, 0x22, 0x5F, 0xEB, 0x26, 0xCC, 0x63, 0x66, 0xBB, 0x6D, 0x60, 
  0xCA, 0x6D, 0x60, 0x82, 0xDD, 0xFA, 0x98, 0x0B, 0xD1, 0x2F, 0xF7, 0x41, 0x5A, 0xFD, 0x84, 0x39 }

User's reconstructed public key (x-coordinate):
QUx = 0x6442A1639E68ACF735E3F30BDC02AC4A6AB4F8D7B497D03BE1B95F0F563424A0
 QUx[32] = 
{ 0x64, 0x42, 0xA1, 0x63, 0x9E, 0x68, 0xAC, 0xF7, 0x35, 0xE3, 0xF3, 0x0B, 0xDC, 0x02, 0xAC, 0x4A, 
  0x6A, 0xB4, 0xF8, 0xD7, 0xB4, 0x97, 0xD0, 0x3B, 0xE1, 0xB9, 0x5F, 0x0F, 0x56, 0x34, 0x24, 0xA0 }

User's reconstructed public key (y-coordinate):
QUy = 0xC5871A8F84A728DCD52835635CD53F47017B7FC6BE3CAF4052AE6D11D7F3D37C
 QUy[32] = 
{ 0xC5, 0x87, 0x1A, 0x8F, 0x84, 0xA7, 0x28, 0xDC, 0xD5, 0x28, 0x35, 0x63, 0x5C, 0xD5, 0x3F, 0x47, 
  0x01, 0x7B, 0x7F, 0xC6, 0xBE, 0x3C, 0xAF, 0x40, 0x52, 0xAE, 0x6D, 0x11, 0xD7, 0xF3, 0xD3, 0x7C }

